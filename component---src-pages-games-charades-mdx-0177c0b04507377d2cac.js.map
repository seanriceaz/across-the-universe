{"version":3,"file":"component---src-pages-games-charades-mdx-0177c0b04507377d2cac.js","mappings":"qPAOaA,EAAe,CAC1B,MAAS,WACT,KAAQ,cAEJC,EAAc,CAClBD,aAAAA,GAGa,SAASE,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,ECjBU,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDMN,MACD,OAAO,SALS,UAKT,iBAAeR,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYY,QAAQ,eAC5E,gCACA,uGACA,uHACA,wHACA,6FACA,qCACA,8CACA,yLACA,+MACA,0CACA,6JACA,+DACA,qHACA,qHACA,0CACA,2DACA,+BACA,0EACA,yCACA,2JACA,sDACA,yOACA,6HACA,iIACA,oDACA,gPACA,yEACA,kOACA,6LACA,+DACA,uQACA,yNACA,oBACE,eAAIC,WAAW,MAAf,sBACA,eAAIA,WAAW,MAAf,0CACA,eAAIA,WAAW,MAAf,mEACA,eAAIA,WAAW,MAAf,gCACA,eAAIA,WAAW,MAAf,iDAMNd,EAAWe,gBAAiB","sources":["webpack://across-the-universe/./src/pages/games/charades.mdx","webpack://across-the-universe/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Charades\",\n  \"date\": \"2022-01-14\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Charades`}</h1>\n    <p>{`This classic acting game has been a highlight of gatherings for many many years.`}</p>\n    <p>{`The object of the game is to guess what the actor is trying to communicate before the others do.`}</p>\n    <p>{`When a player or their team correctly guesses the prompt the actor was given, they score a point.`}</p>\n    <p>{`Actors cannot speak, and should avoid mouthing words or making noises.`}</p>\n    <h2>{`Order of play`}</h2>\n    <h3>{`0. Prepare the prompts`}</h3>\n    <p>{`Traditionally, you would have everyone in the party write down 2 or 3 ideas on separate strips of paper to be put into a hat or a bowl for the actor to draw from.`}</p>\n    <p>{`Since this site is all about playing games remotely, You can click or tap the \"get a prompt\" button on this page when you're the actor. Just tap it again when you want another prompt!`}</p>\n    <h3>{`1. Select an actor`}</h3>\n    <p>{`If playing on teams, alternate which team the actor comes from. Everyone should get a turn as actor throughout the course of the game.`}</p>\n    <h3>{`2. Give the actor a prompt and a moment`}</h3>\n    <p>{`The actor needs to get their prompt. You can use this site, or get your prompt by other means.`}</p>\n    <p>{`Take a moment and plan out how you're going te get the others to guess what you're acting out.`}</p>\n    <h3>{`3. Start the timer`}</h3>\n    <p>{`One minute should be plenty of time.`}</p>\n    <h3>{`4. Act!`}</h3>\n    <p>{`Set your camera up and start acting out the prompt.`}</p>\n    <h4>{`Live simultaneous`}</h4>\n    <p>{`If you're on a group video call, listen for others to say the prompt. Then stop and give points when you hear it from a participant.`}</p>\n    <h4>{`Video messaging (asynchronous)`}</h4>\n    <p>{`You can play this game in a group chat or even 1:1. Record a video of yourself acting out the prompt. Then send it to the group. The first person to respond by text message with the correct answer gets a point!`}</p>\n    <p>{`It may be helpful to limit the guesses, like \"guess by the end of the day\" or \"you get three guesses\".`}</p>\n    <p>{`If the time frame or guess limit is reached, the round is over and the next actor gets to take their turn.`}</p>\n    <h3>{`5. Repeat until you're done!`}</h3>\n    <p>{`Let everyone get a turn as actor, and keep going until you've decided to end the game. You can pre-determine a score limit (10, 15 or 21 are typical), or give it a time limit like an hour, or a week (if asynchronous).`}</p>\n    <h2>{`Light Delay, Time Dilation, and Extreme Distances`}</h2>\n    <p>{`When guesses happen asynchronously, it's up to the actor to determine who gets the point. If the actor receives two correct guesses, for example, the one received by the actor first will score the point.`}</p>\n    <p>{`Because of this, those who are nearer to the actor have an advantage. This is one reason why it is important to rotate actors, and limit the guesses allowed per team.`}</p>\n    <h3>{`Tips for playing in these circumstances`}</h3>\n    <p>{`In some cases, it might make sense to have everyone send their \"actor\" video at the same time. If this is the case, participants should put the actor's name next to their guesses in the shared chat, since messages may come in out-of-order.`}</p>\n    <p>{`When rule negotiation is difficult due to light delay, don't bother with it. Just send short instructions for how to play. For example, send the link to this page with a couple other rules like:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Maximum 3 guesses`}</li>\n      <li parentName=\"ul\">{`Everyone send their \"actor\" video now`}</li>\n      <li parentName=\"ul\">{`Teams are Jett, Spike, and Faye versus Kirk, Spock, and Scotty`}</li>\n      <li parentName=\"ul\">{`One round, most points wins`}</li>\n      <li parentName=\"ul\">{`Get your prompts from acrosstheuniverse.fun`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["_frontmatter","layoutProps","MDXContent","components","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","mdxType","parentName","isMDXComponent"],"sourceRoot":""}